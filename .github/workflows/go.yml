name: Go

on:
  push:
    branches: ['*']
    tags: ['v*']
  pull_request:
    branches: ['*']

jobs:

  build:
    runs-on: ubuntu-latest
    steps:

    - name: Setup Go
      uses: actions/setup-go@v1
      with:
        go-version: 1.17.x

    - name: Checkout code
      uses: actions/checkout@v2

    - name: Load cached dependencies
      uses: actions/cache@v1
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Lint
      run: |
        make lint
        make generate
        if ! git diff --exit-code; then
          echo "Generated code is out of date"
        fi

    - name: Build
      run: go build -v ./...

    - name: Test
      run: make test

  release:
    runs-on: ubuntu-latest

    # Only release pushes of tags starting with v and if the build succeeded.
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    needs: [build]

    steps:

    - name: Setup Go
      uses: actions/setup-go@v1
      with:
        go-version: 1.17.x

    - name: Checkout code
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Load cached dependencies
      uses: actions/cache@v1
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Prepare release
      run: |
        set -eou pipefail
        VERSION=${{ github.ref }}
        VERSION="${VERSION#refs/tags/}"
        echo "VERSION=$VERSION" >> $GITHUB_ENV
        echo "Releasing $VERSION"
        echo "Release notes:"
        echo "----"
        go run ./scripts/extract_changelog.go "$VERSION" | tee changes.$VERSION.txt
        echo "----"

    - name: Release
      uses: goreleaser/goreleaser-action@v2
      with:
        distribution: goreleaser
        version: latest
        args: release --rm-dist --release-notes changes.${{ env.VERSION }}.txt
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GORELEASER_CURRENT_TAG: ${{ env.VERSION }}
